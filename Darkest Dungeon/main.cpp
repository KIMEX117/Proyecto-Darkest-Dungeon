#include <iostream>
#include <windows.h>
#include <stdio.h>
#include <conio.h>
#include <mmsystem.h>
#include <cstdlib>
#include <stdlib.h>
#include <time.h>

using namespace std;

void ShowConsoleCursor(bool showFlag){
    HANDLE out = GetStdHandle(STD_OUTPUT_HANDLE);
    CONSOLE_CURSOR_INFO cursorInfo;
    GetConsoleCursorInfo(out, &cursorInfo);
    cursorInfo.bVisible = showFlag;
    SetConsoleCursorInfo(out, &cursorInfo);
}
void gotoxy(int x, int y){
    HANDLE hcon;
    hcon = GetStdHandle(STD_OUTPUT_HANDLE);
    COORD dwpos;
    dwpos.X = x;
    dwpos.Y = y;
    SetConsoleCursorPosition(hcon, dwpos);
}
void pintarMarcoJugar();
void pintarMarco();
void pintarescenario();
void pintarBatalla();
void pintarmapa();
void plaguedoctor();
void puntaje();
void vestal();
void highwayman();
void crusader();
void escudo();
void esqueleto();
void arquero();
void arquero_2();
void pintarCastillo();
void pintarTitulo();
void pintarMenu(int p);
void pintarInstruc();
void pintarJugar();
void pintarCreditos();
void pintarSalir();
int inicio();

int main()
{
    inicio();
}

void opcionJuego(int opcion){
    string camino[2]={"Left","Right"};
    gotoxy(35,10);cout<<"0====================0";
    gotoxy(35,11);cout<<"|  Elige un camino:  |";
    gotoxy(35,12);cout<<"|        <->         |";
    gotoxy(35,13);cout<<"0====================0";

    for(int i=0;i<2;i++){
        if(i==opcion){
            SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 11);
            gotoxy(38,12);
            cout<< camino[i] << endl;
        }else{
            SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15);
            gotoxy(49,12);
            cout << camino[i] << endl;
        }
    }
}
void pintarescenario()
{
    //JUEGO CONTINUO
    bool on=true;
    //POSICIONES DEL ESCENARIO
    int pos_x=0;
    int movimiento=1;
    //POSICION EN EL MAPA Y EVENTOS
    int randomCaracter = 0;
    srand (time(NULL));
    int posicion_actual = 0;
    //PUNTOS DE LOS NIVELES
    int puntos_cofre = 0;
    int puntos_enemigos = 0;
    int puntos_obtenidos = 0;
    //VARIABLES NIVEL
    int opcion=0;
    bool pasillo=false;
    bool nivel_1=true;
    bool nivel_2=false;
    bool nivel_F=false;

    //MAPA           #1              #5          #8          #11         #14         #17         #20         #23
    char mapa[23] = {'O',' ',' ',' ','X',' ',' ','?',' ',' ','?',' ',' ','X',' ',' ','?',' ',' ','?',' ',' ','X'};
    //POSICION X MATRIZ        #1              #5                  #10                 #15                 #20                 #25                 #30                 #35                 #40                 #45                 #50                 #55                 #60                 #65                 #70                 #75                 #80                 #85                 #90                 #95                #100                #105                #110                #115                #120                #125                #130                #135                #140                #145                #150                #155                #160                #165                #170                #175                #180                #185
    char matrizJuego[20][185]={' ',' ',' ',' ',' ','_','_','_','_','_','_','_','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','(','o','.','_','_','_','.','o',')',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','(','o','.','_','_','_','.','o',')',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','(','o','.','_','_','_','.','o',')',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','_','_','_','_','_','_','_','_',' ',' ',' ',' ',' ',
                               ' ','_','_','_','[','_','_','_','_','_','_','_','_',']','_','_','_',' ','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','+','+','=','=','=','=','=','=','=','+','+','_','_','_','_','|','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','+','+','=','=','=','=','=','=','=','+','+','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',' ','_','_','_','[','_','_','_','_','_','_','_','_',']','_','_','_',' ',
                               '[','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',']',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ','[','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',']',
                               ',','|','|','.','"','"','"','"','"','"','"','"','"','"','.','|','|',',','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','|',' ',' ',' ',' ',' ',' ',' ','|','|','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','|','|',' ',' ',' ',' ',' ',' ',' ','|','|','_','_','_','_','|','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_',',','|','|','.','"','"','"','"','"','"','"','"','"','"','.','|','|',',',
                               ',','|','|',' ',' ',' ','_',' ','_','_',' ','_',' ',' ',' ','|','|',',',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',',','|','|',' ',' ',' ','_',' ','_','_',' ','_',' ',' ',' ','|','|',',',
                               ',','|','|',' ',' ','|',' ','|',' ',' ','|',' ','|',' ',' ','|','|',',','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','+','+','=','=','=','=','=','=','=','+','+','_','_','_','_','|','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','+','+','=','=','=','=','=','=','=','+','+','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',',','|','|',' ',' ','|',' ','|',' ',' ','|',' ','|',' ',' ','|','|',',',
                               ',','|','|',' ',' ','|',' ','+',' ',' ','+',' ','|',' ',' ','|','|',',',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',',','|','|',' ',' ','|',' ','+',' ',' ','+',' ','|',' ',' ','|','|',',',
                               ',','|','|',' ',' ','|','_','|','_','_','|','_','|',' ',' ','|','|',',','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_',',','|','|',' ',' ','|','_','|','_','_','|','_','|',' ',' ','|','|',',',
                               ',',':',':',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',':',':',',',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',',',':',':',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',':',':',',',
                               ',','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','(',')',' ','|','|',',','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',',','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ','(',')',' ','|','|',',',
                               ',','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',',',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',',','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',',',
                               ',','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',',','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_',',','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',',',
                               ',','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',',',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',',','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|','|',',',
                               '[','_','_',']','=','=','=','=','=','=','=','=','=','=','[','_','_',']','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','(','o','.','_','_','_','.','o',')','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','(','o','.','_','_','_','.','o',')','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','(','o','.','_','_','_','.','o',')','_','_','_','_','_','_','_','_','_','_','_','_','_','_','[','_','_',']','=','=','=','=','=','=','=','=','=','=','[','_','_',']',





};

    char matrizSinCofre[20][35];
    for(int i=0;i<20;i++){
        for(int j=132;j<167;j++){
            matrizSinCofre[i][j-132]=matrizJuego[i][j];
        }
    }

    //POSICION X MATRIZ        #1              #5                 #10                 #15                 #20                 #25                 #30                 #35
    char matrizCofre[20][35]={' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
                              '=','+','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_',
                              '|','|',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',
                              '|','|','_','_','_','.','=','"','"','_',';','=','.','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_',
                              '|',',','-','"','_',',','=','"','"',' ',' ',' ',' ',' ','`','"','=','.','_',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
                              '+','"','=','.','_','o','`','"','-','.','_',' ',' ',' ',' ',' ',' ',' ',' ','`','"','=','.','_','_','_','_','_','_','_','_','_','_','_','_',
                              ' ',' ',' ',' ',' ','`','"','=','.','_','o','`','"','=','.','_',' ',' ',' ',' ',' ',' ','_','`','"','=','.','_',' ',' ',' ',' ',' ',' ',' ',
                              '_','_','_','_','_','_','_','_','_','_',':','=','.','_','o',' ','"','=','.','_','.','"','_','.','-','=','"',' ','"','=','.','_','_','_','_',
                              ' ',' ',' ','_','_','.','-','-','"',' ',',',' ',';',' ','`','"','=','.','_','o','.','"',' ',',','-','"','"','"','-','.','_',' ','"','.',' ',
                              '.','_','"',' ',' ',',','.',' ','.','`',' ','`',' ','`','`',' ',' ',' ',' ','`','"','-','.','_','"','-','.','_',' ',' ',' ','"','.',' ','`',
                              '|','o','`','"','=','.','_','`',' ',',',' ','"','`',' ','`',';',' ','.','"','.',' ',',',' ',' ','"','-','.','_','"','-','.','_',';',' ',';',
                              '|',' ',';','`','-','.','o','`','"','=','.','_',';',' ','.','"',' ','`',' ',' ','`','.','"',' ','`',' ','.',' ','"','-','.','_',' ','/','_',
                              '|','o',';',' ',' ',' ',' ','`','"','-','.','o','`','"','=','.','_','`','`',' ',' ','`','`',' ','"',' ',' ','_','_','.','-','-','o',';',' ',
                              '|',' ',';',' ',' ',' ',' ',' ','(','#',')',' ','`','-','.','o',' ','`','"','=','.',' ','_','.','-','-','"','_','o','.','-',';',' ',';','_',
                              '|','o',';','.','_',' ',' ',' ',' ','"',' ',' ',' ',' ',' ',' ','`','"','.','o','|','o','_','.','-','-','"',' ',' ',' ',' ',';','o',';','_',
                              '_','"','=','.','_','o','-','-','.','_',' ',' ',' ',' ',' ',' ',' ',' ',';',' ','|',' ',';',' ',' ',' ',' ',' ',' ',' ',' ',';',' ',';','/',
                              '_','_','_','/','_','_','"','=','.','_','o','-','-','.','_',' ',' ',' ',';','o','|','o',';',' ',' ',' ',' ',' ','_','.','_',';','o',';','_',
                              '_','_','_','_','_','_','/','_','_','_','_','"','=','.','_','o','.','_',';',' ','|',' ',';','_','.','-','-','"','o','.','-','-','"','_','/',
                              '_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','"','=','.','o','|','o','_','.','-','-','"','"','_','_','_','/','_','_','_',
                              '_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/'};


    while(on)
    {
        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15);
        //TECLA PRESIONADA
        if(kbhit())
        {
            //MOVIMIENTO EN EL ESCENARIO
            for(int i=0;i<20;i++){
                for(int j=pos_x;j<91+pos_x;j++){
                    gotoxy(movimiento,i+1);
                    if(j>131&&j<167&&(pasillo==true&&mapa[posicion_actual+1]=='I')){
                        matrizJuego[i][j]=matrizCofre[i][j-132];
                    }
                    if(j>131&&j<167&&(pasillo==false&&mapa[posicion_actual+1]!='I')){
                        matrizJuego[i][j]=matrizSinCofre[i][j-132];
                    }
                    cout<<matrizJuego[i][j];
                    movimiento++;
                }
                movimiento=1;
                cout<<endl;
            }
            //SIMBOLOGIA DEL MAPA
            gotoxy(93,1);cout<<"O Posicion actual";
            gotoxy(93,2);cout<<"X Enemigos";
            gotoxy(93,3);cout<<"I Tesoro";
            gotoxy(93,4);cout<<"* Pasillo vacio";
            //PUNTAJE
            gotoxy(93,5);cout<<"Score: "<<puntos_obtenidos<<" puntos"<<endl;
            //MAPA IMPRESO EN PANTALLA
            gotoxy(100,25);cout<<"Nivel 1";
            gotoxy(100,19);cout<<"Nivel 2";
            gotoxy(96,13);cout<<"Nivel Final";
            //IMPRESION DEL MAPA
            int impresion_Y_mapa=28;
            for(int i=0;i<23;i++){
                if((i>=0&&i<=4)||(i>=11&&i<=13)||(i>=20&&i<=22)){
                    gotoxy(108,impresion_Y_mapa);
                    cout<<"["<<mapa[i]<<"]";
                }
                if((i>=5&&i<=7)||(i>=14&&i<=16)){
                    gotoxy(105,impresion_Y_mapa);
                    cout<<"["<<mapa[i]<<"]";
                }
                if((i>=8&&i<=10)||(i>=17&&i<=19)){
                    if(i==8){
                        impresion_Y_mapa=23;
                    }
                    if(i==17){
                        impresion_Y_mapa=17;
                    }
                    gotoxy(111,impresion_Y_mapa);
                    cout<<"["<<mapa[i]<<"]";
                }
                impresion_Y_mapa--;
            }

            //HEROES (PARA QUE SE IMPRIMAN SI MUEREN SOLO VALIDAR LA VIDA)
            plaguedoctor();
            vestal();
            highwayman();
            crusader();

            //CAPTURA DE TECLA
            char tecla = getch();
            //DERECHA
            if(tecla == 'd'||tecla == 'D')
            {
                if(nivel_1==true){
                    if(pos_x<94){
                        pos_x++;
                    }
                    if(pos_x%22==0){
                        posicion_actual++;
                        mapa[posicion_actual] = 'O';
                        mapa[posicion_actual-1] = ' ';
                    }
                }
                if(nivel_2==true){
                    if(pos_x<94){
                        pos_x++;
                    }
                    if(pos_x%45==0){
                        posicion_actual++;
                        mapa[posicion_actual] = 'O';
                        mapa[posicion_actual-1] = ' ';
                    }
                    if(pasillo==true){
                        if(pos_x==89&&mapa[posicion_actual+1]=='I'){
                            puntos_cofre = rand() % 100+50;
                            puntos_obtenidos += puntos_cofre;
                        }else if(pos_x==89&&mapa[posicion_actual+1]=='*'){
                            puntos_cofre = rand() % 50;
                            puntos_obtenidos += puntos_cofre;
                        }
                        if(pos_x==94){
                            pasillo=false;
                            if(mapa[7]=='O'){
                                posicion_actual+=4;
                                mapa[posicion_actual] = 'O';
                                mapa[posicion_actual-4] = ' ';
                            }else{
                                posicion_actual++;
                                mapa[posicion_actual] = 'O';
                                mapa[posicion_actual-1] = ' ';
                            }
                            pos_x=0;
                        }
                    }
                }
                if(nivel_F==true){
                    if(pos_x<94){
                        pos_x++;
                    }
                    if(pos_x%45==0){
                        posicion_actual++;
                        mapa[posicion_actual] = 'O';
                        mapa[posicion_actual-1] = ' ';
                    }
                    if(pasillo==true){
                        if(pos_x==89&&mapa[posicion_actual+1]=='I'){
                            puntos_cofre = rand() % 100+50;
                            puntos_obtenidos += puntos_cofre;
                        }else if(pos_x==89&&mapa[posicion_actual+1]=='*'){
                            puntos_cofre = rand() % 50;
                            puntos_obtenidos += puntos_cofre;
                        }
                        if(pos_x==94){
                            pasillo=false;
                            if(mapa[16]=='O'){
                                posicion_actual+=4;
                                mapa[posicion_actual] = 'O';
                                mapa[posicion_actual-4] = ' ';
                            }else{
                                posicion_actual++;
                                mapa[posicion_actual] = 'O';
                                mapa[posicion_actual-1] = ' ';
                            }
                            pos_x=0;
                        }
                    }
                }
            }
            //IZQUIERDA
            if(tecla == 'a'||tecla == 'A')
            {
                if(nivel_1==true){
                    if(pos_x>0)
                    {
                        pos_x--;
                    }
                    if(pos_x==21||pos_x==43||pos_x==65||pos_x==87){
                        posicion_actual--;
                        mapa[posicion_actual] = 'O';
                        mapa[posicion_actual+1] = ' ';
                    }
                }
                if(nivel_2==true||nivel_F==true){
                    if(pos_x>0)
                    {
                        pos_x--;
                    }
                    if(pos_x==44||pos_x==89){
                        posicion_actual--;
                        mapa[posicion_actual] = 'O';
                        mapa[posicion_actual+1] = ' ';
                    }
                }
            }
            /*
            //ESCENARIO BATALLA (TECLA DE PRUEBAS)
            if(tecla == 's'){
                pintarBatalla();
            }
            */
        }
        if(pos_x==94&&pasillo==false&&(nivel_1==true||nivel_2==true)){
            opcionJuego(opcion);
            Sleep(500);
            if (GetAsyncKeyState(VK_LEFT)){
                opcion=0;
            }
            if (GetAsyncKeyState(VK_RIGHT)){
                opcion=1;
            }
            if (GetAsyncKeyState(VK_RETURN)){
                switch(opcion){
                    case 0:
                        posicion_actual++;
                        mapa[posicion_actual] = 'O';
                        mapa[posicion_actual-1] = ' ';
                        if(nivel_1==true){
                            nivel_1=false;
                            nivel_2=true;
                            pasillo=true;
                            mapa[7]='I';
                            mapa[10]='*';
                            /* RANDOM PARA LOS SIGNOS DE INTERROGACION
                            for(int i=0;i<2;i++){
                                randomCaracter=rand()%10;
                                if(i==0&&randomCaracter<=5){
                                    mapa[7]='I';
                                }else{
                                    mapa[7]='*';
                                }
                                if(i==1&&randomCaracter<=5){
                                    mapa[10]='I';
                                }else{
                                    mapa[10]='*';
                                }
                            }*/
                        }
                        if(nivel_1==false&&nivel_2==true&&pasillo==false){
                            nivel_2=false;
                            nivel_F=true;
                            pasillo=true;
                            mapa[16]='*';
                            mapa[19]='I';
                            /* RANDOM PARA LOS SIGNOS DE INTERROGACION
                            for(int i=0;i<2;i++){
                                randomCaracter=rand()%10;
                                if(i==0&&randomCaracter>=0&&randomCaracter<=5){
                                    mapa[16]='I';
                                }else{
                                    mapa[16]='*';
                                }
                                if(i==1&&randomCaracter>=0&&randomCaracter<=5){
                                    mapa[19]='I';
                                }else{
                                    mapa[19]='*';
                                }
                            }*/
                        }
                        pos_x = 0;
                        break;
                    case 1:
                        posicion_actual+=4;
                        mapa[posicion_actual] = 'O';
                        mapa[posicion_actual-4] = ' ';
                        if(nivel_1==true){
                            nivel_1=false;
                            nivel_2=true;
                            pasillo=true;
                            mapa[7]='I';
                            mapa[10]='*';
                            /* RANDOM PARA LOS SIGNOS DE INTERROGACION
                            for(int i=0;i<2;i++){
                                randomCaracter=rand()%10;
                                if(i==0&&randomCaracter>=0&&randomCaracter<=5){
                                    mapa[7]='I';
                                }else{
                                    mapa[7]='*';
                                }
                                if(i==1&&randomCaracter>=0&&randomCaracter<=5){
                                    mapa[10]='I';
                                }else{
                                    mapa[10]='*';
                                }
                            }*/
                        }
                        if(nivel_1==false&&nivel_2==true&&pasillo==false){
                            nivel_2=false;
                            nivel_F=true;
                            pasillo=true;
                            mapa[16]='*';
                            mapa[19]='I';
                            /* RANDOM PARA LOS SIGNOS DE INTERROGACION
                            for(int i=0;i<2;i++){
                                randomCaracter=rand()%10;
                                if(i==0&&randomCaracter>=0&&randomCaracter<=5){
                                    mapa[16]='I';
                                }else{
                                    mapa[16]='*';
                                }
                                if(i==1&&randomCaracter>=0&&randomCaracter<=5){
                                    mapa[19]='I';
                                }else{
                                    mapa[19]='*';
                                }
                            }*/
                        }
                        pos_x = 0;
                        break;
                }
            }
        }
    }
}

void pintarBatalla(){
    char matrizPelea[20][91]={'(','o','.','_','_','_','.','o',')',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','(','o','.','_','_','_','.','o',')',
                              '_','|',' ',' ',' ',' ',' ','|','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_',
                              ' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',
                              '_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','|',' ',' ',' ',' ',' ','|','_',
                              ' ','|',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',
                              '_','|',' ',' ',' ',' ',' ','|','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_',
                              ' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',
                              '_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','|',' ',' ',' ',' ',' ','|','_',
                              ' ','|',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',
                              '_','|',' ',' ',' ',' ',' ','|','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|',' ',' ',' ',' ',' ','|','_',
                              ' ','|','_','_',',','~','~','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ','|','_','_',',','~','~','|',' ',
                              '_','|',' ',' ',' ',' ',' ','|','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','|',' ',' ',' ',' ',' ','|','_',
                              ' ','|',' ',' ',' ',' ',' ','|','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','|',' ',' ',' ',' ',' ','|',' ',
                              '(','o','.','_','_','_','.','o',')','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','|','_','_','_','_','_','_','_','_','_','_','_','_','_','(','o','.','_','_','_','.','o',')',
                              '_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_',
                              '_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_',
                              '_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_',
                              '_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_',
                              '_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_',
                              '_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_','_','_','_','_','/','_','_'};
    for(int i=0;i<20;i++){
        for(int j=0;j<91;j++){
            gotoxy(j+1,i+1);
            cout<<matrizPelea[i][j];
        }
        cout<<endl;
    }
}

void plaguedoctor(){
    gotoxy(3,10);
    cout<<"   _.~~	"<<endl;
    gotoxy(3,11);
    cout<<"  (__)  "<<endl;
    gotoxy(3,12);
    cout<<"  <  >  "<<endl;
    gotoxy(3,13);
    cout<<"   )(   "<<endl;
    gotoxy(3,14);
    cout<<"  /~~"<<char(92)<<"  "<<endl;
    gotoxy(3,15);
    cout<<" /~~~~"<<char(92)<<" "<<endl;
    gotoxy(3,16);
    cout<<"(______)"<<endl;
}
void vestal(){
    gotoxy(16,10);
    cout<<"  ___  "<<endl;
    gotoxy(16,11);
    cout<<"<|"<<char(34)<<"^"<<char(34)<<"|>"<<endl;
    gotoxy(16,12);
    cout<<"<|^"<<char(34)<<"^|>"<<endl;
    gotoxy(16,13);
    cout<<"<|"<<char(34)<<"^"<<char(34)<<"|>"<<endl;
    gotoxy(16,14);
    cout<<"  "<<char(92)<<" /  "<<endl;
    gotoxy(16,15);
    cout<<"  | |  "<<endl;
    gotoxy(16,16);
    cout<<"  |_|  "<<endl;
}
void highwayman(){
    gotoxy(27,11);
    cout<<"  __,____ "<<endl;
    gotoxy(27,12);
    cout<<" /__.==--"<<char(34)<<endl;
    gotoxy(27,13);
    cout<<"/#(-'     "<<endl;
    gotoxy(27,14);
    cout<<"`-'		 "<<endl;
}
void crusader(){
    gotoxy(40,10);
    cout<<"  /|"<<char(92)<<"  "<<endl;
    gotoxy(40,11);
    cout<<" | | | "<<endl;
    gotoxy(40,12);
    cout<<" | | | "<<endl;
    gotoxy(40,13);
    cout<<" | | | "<<endl;
    gotoxy(40,14);
    cout<<"[/////]"<<endl;
    gotoxy(40,15);
    cout<<"  |_|  "<<endl;
    gotoxy(40,16);
    cout<<" (~~~) "<<endl;
}
void escudo(){
    gotoxy(53,10);
    cout<<" _.-^-._ "<<endl;
    gotoxy(53,11);
    cout<<"|   :   |"<<endl;
    gotoxy(53,12);
    cout<<"|  .:.  |"<<endl;
    gotoxy(53,13);
    cout<<"|.:::::.|"<<endl;
    gotoxy(53,14);
    cout<<"| ::::: |"<<endl;
    gotoxy(53,15);
    cout<<"|  ':'  |"<<endl;
    gotoxy(53,16);
    cout<<char(92)<<"   :   /"<<endl;
    gotoxy(53,17);
    cout<<" `-.:.-` "<<endl;
}
void esqueleto(){
    gotoxy(64,12);
    cout<<" _____ "<<endl;
    gotoxy(64,13);
    cout<<"/     "<<char(92)<<endl;
    gotoxy(64,14);
    cout<<"|() ()|"<<endl;
    gotoxy(64,15);
    cout<<char(92)<<"  ^  /"<<endl;
    gotoxy(64,16);
    cout<<" ||||| "<<endl;
    gotoxy(64,17);
    cout<<" ''''' "<<endl;
}
void arquero(){
    gotoxy(72,12);
    cout<<"    /"<<char(92)<<"   "<<endl;
    gotoxy(72,13);
    cout<<"   |--"<<char(92)<<"  "<<endl;
    gotoxy(72,14);
    cout<<"<--+====~"<<endl;
    gotoxy(72,15);
    cout<<"   |--/  "<<endl;
    gotoxy(72,16);
    cout<<"    "<<char(92)<<"/   "<<endl;
}
void arquero_2(){
    gotoxy(83,12);
    cout<<"    /"<<char(92)<<"   "<<endl;
    gotoxy(83,13);
    cout<<"   |--"<<char(92)<<"  "<<endl;
    gotoxy(83,14);
    cout<<"<--+====~"<<endl;
    gotoxy(83,15);
    cout<<"   |--/  "<<endl;
    gotoxy(83,16);
    cout<<"    "<<char(92)<<"/   "<<endl;
}

void pintarCastillo(){
gotoxy(3,7);
cout<<"                              _   _   _";
gotoxy(3,8);
cout<<"                    |"<<char(62)<<char(62)<<char(62)<<"     |;| |;| |;|        |"<<char(62)<<char(62)<<char(62)<<" ";
gotoxy(3,9);
cout<<"                _  _|_  _    "<<char(92)<<char(92)<<".    .  /    _  _|_  _                          ";
gotoxy(3,10);
cout<<"               |;|_|;|_|;|    "<<char(92)<<char(92)<<":. ,  /    |;|_|;|_|;|                         ";
gotoxy(3,11);
cout<<"               "<<char(92)<<char(92)<<"..      /    ||;   . |    "<<char(92)<<char(92)<<".    .  /                         ";
gotoxy(3,12);
cout<<"                "<<char(92)<<char(92)<<".  ,  /     ||:  .  |     "<<char(92)<<char(92)<<":  .  /                          ";
gotoxy(3,13);
cout<<"                 ||:   |_   _ ||_ . _ | _   _||:   |                           ";
gotoxy(3,14);
cout<<"                 ||:  .|||_|;|_|;|_|;|_|;|_|;||:.  |                           ";
gotoxy(3,15);
cout<<"                 ||: . || .     . .   .  ,   ||:   |       "<<char(92)<<",/                 ";
gotoxy(3,16);
cout<<"                 ||:   ||:  ,  _______   .   ||: , |            /`"<<char(92)<<"            ";
gotoxy(3,17);
cout<<"                 ||:   || .   /+++++++"<<char(92)<<"    . ||:   |                           ";
gotoxy(3,18);
cout<<"                 ||:   ||.    |+++++++| .    ||: . |                           ";
gotoxy(3,19);
cout<<"     ____--`~----'--~~__|.    |+++++__|----~    ~`---,              ___        ";
gotoxy(3,20);
cout<<"-~--~                   ~---__|,--~'                  ~~----_____-~'   `~----~~";
}
void pintarMarcoJugar(){
    for(int i = 1; i < 100; i++)
    {
        gotoxy(i,0);
        cout<<"";
    }
    //La de la parte derecha
    for(int i = 1; i < 29; i++)
    {
        gotoxy(117,i);
        cout<<"\272";
    }
    //La parte de abajo en medio
    for(int i = 91; i >= 0; i--)
    {
        gotoxy(i,21);
        if(i == 0)
        {
            cout<<"\310";
        }
        if(i == 92)
        {
            cout<<char(202);
        }
        cout<<"\315";
    }
    gotoxy(92,21);
    cout<<"\274";
    //La parte de abajo
    for(int i = 116; i >= 0; i--)
    {
        gotoxy(i,29);
        if(i == 0)
        {
            cout<<"\310";
        }
        if(i == 92)
        {
            cout<<char(202);
        }
        cout<<"\315";
    }
    gotoxy(117,29);
    cout<<"\274";
    gotoxy(111,21);

    //la parte de arriba
    for(int i = 116; i >= 0; i--)
    {
        gotoxy(i,0);
        if(i == 0)
        {
            cout<<"\311";
        }
        if(i == 92)
        {
            cout<<char(203);
        }
        cout<<"\315";
    }
    gotoxy(117,0);
    cout<<"\273";
    //Parte de la izquierda
    for(int i = 28; i > 0; i--)
    {
        gotoxy(0,i);
        cout<<"\272";
    }
    //La cosa de en medio
    for(int i=1;i<21;i++)
    {
        gotoxy(92,i);
        cout<<char(186);
    }
    //El palo de la derecha
    for(int i = 22;i < 29; i++)
    {
        gotoxy(92,i);
        cout<<char(186);
    }
    //El palo de la izquierda
    for(int i = 22;i < 29; i++)
    {
        gotoxy(40,i);
        cout<<char(186);
    }

}
void pintarMarco(){
    for(int i = 1; i < 100; i++)
    {
        gotoxy(i,0);
        cout<<"";
    }
    //Parte de arriba a abajo derecha
    for(int i = 1; i < 21; i++)
    {
        gotoxy(111,i);
        cout<<"\272";
    }
    //De izquierda a derecha abajo
    for(int i = 110; i >= 0; i--)
    {
        gotoxy(i,21);
        if(i == 0)
        {
            cout<<"\310";
        }
        if(i == 84){
            cout<<char(202);
        }
        cout<<"\315";
    }
    gotoxy(111,21);
    cout<<"\274";
    //la parte de arriba
    for(int i = 110; i >= 0; i--)
    {
        gotoxy(i,0);
        if(i == 0)
        {
            cout<<"\311";
        }
        if(i == 84){
            cout<<char(203);
        }
        cout<<"\315";
    }
    gotoxy(111,0);
    cout<<"\273";
    for(int i = 20; i > 0; i--)
    {
        gotoxy(0,i);
        cout<<"\272";
    }
    for(int i=1;i<21;i++){
        gotoxy(84,i);
        cout<<char(186);
    }
}
void pintarTitulo(){
    gotoxy(1,1);
    cout<<"  _____             _             _     _____      "<<endl;
    gotoxy(1,2);
    cout<<" |  __ "<<char(92)<<"           | |           | |   |  __ "<<char(92)<<"                                    "<<endl;
    gotoxy(1,3);
    cout<<" | |  | | __ _ _ __| | _____  ___| |_  | |  | |_   _ _ __   __ _  ___  ___  _ __  "<<endl;
    gotoxy(1,4);
    cout<<" | |  | |/ _` | '__| |/ / _ "<<char(92)<<"/ __| __| | |  | | | | | '_ "<<char(92)<<" / _` |/ _ "<<char(92)<<"/ _ "<<char(92)<<"| '_ "<<char(92)<<" "<<endl;
    gotoxy(1,5);
    cout<<" | |__| | (_| | |  |   <  __/"<<char(92)<<"__ "<<char(92)<<" |_  | |__| | |_| | | | | (_| |  __/ (_) | | | |"<<endl;
    gotoxy(1,6);
    cout<<" |_____/ "<<char(92)<<"__,_|_|  |_|"<<char(92)<<"_"<<char(92)<<"___||___/"<<char(92)<<"__| |_____/ "<<char(92)<<"__,_|_| |_|"<<char(92)<<"__, |"<<char(92)<<"___|"<<char(92)<<"___/|_| |_|"<<endl;
    gotoxy(1,7);
    cout<<"                                                            __/ |                 "<<endl;
    gotoxy(1,8);
    cout<<"                                                           |___/                  "<<endl;
}
void pintarMenu(int p){
    string Menu[4] = {"Iniciar juego", "Instrucciones", "Creditos", "Salir"};
    int puntero = p;
    gotoxy(88,1);
    cout << "Main Menu";
    for (int j = 0; j < 4; j++)
    {
        if (j == puntero)
        {
            SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 11);
            gotoxy(86,3+j);
            cout << Menu[j] << endl;
        }
        else
        {
            SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15);
            gotoxy(86,3+j);
            cout << Menu[j] << endl;
        }
    }
    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15);
    gotoxy(86,10);
    cout << "Botones del menu:";
    gotoxy(86,12);
    cout << "Flecha arriba:";
    gotoxy(86,13);
    cout << "Ir arriba en las opciones";
    gotoxy(86,15);
    cout << "Flecha abajo:";
    gotoxy(86,16);
    cout << "Ir abajo en las opciones";
    gotoxy(86,18);
    cout << "Enter:";
    gotoxy(86,19);
    cout << "Elegir opcion";
}
void pintarInstruc(){
    gotoxy(1,1);
    cout<<"  _____           _                       _                       "<<endl;
    gotoxy(1,2);
    cout<<" |_   _|         | |                     (_)                      "<<endl;
    gotoxy(1,3);
    cout<<"   | |  _ __  ___| |_ _ __ _   _  ___ ___ _  ___  _ __   ___  ___ "<<endl;
    gotoxy(1,4);
    cout<<"   | | | '_ "<<char(92)<<"/ __| __| '__| | | |/ __/ __| |/ _ "<<char(92)<<"| '_ "<<char(92)<<" / _ "<<char(92)<<"/ __|"<<endl;
    gotoxy(1,5);
    cout<<"  _| |_| | | "<<char(92)<<"__ "<<char(92)<<" |_| |  | |_| | (_| (__| | (_) | | | |  __/"<<char(92)<<"__ "<<char(92)<<""<<endl;
    gotoxy(1,6);
    cout<<" |_____|_| |_|___/"<<char(92)<<"__|_|   "<<char(92)<<"__,_|"<<char(92)<<"___"<<char(92)<<"___|_|"<<char(92)<<"___/|_| |_|"<<char(92)<<"___||___/"<<endl;
}
void pintarJugar(){
    gotoxy(1,1);
    cout<<"       _                        ";
    gotoxy(1,2);
    cout<<"      | |                       ";
    gotoxy(1,3);
    cout<<"      | |_   _  __ _  __ _ _ __ ";
    gotoxy(1,4);
    cout<<"  _   | | | | |/ _` |/ _` | '__|";
    gotoxy(1,5);
    cout<<" | |__| | |_| | (_| | (_| | |   ";
    gotoxy(1,6);
    cout<<"  "<<char(92)<<"____/ "<<char(92)<<"__,_|"<<char(92)<<"__, |"<<char(92)<<"__,_|_|   ";
    gotoxy(1,7);
    cout<<"                __/ |           ";
    gotoxy(1,8);
    cout<<"               |___/            ";
}
void pintarCreditos(){
    gotoxy(1,1);
    cout<<"   _____              _ _ _            ";
    gotoxy(1,2);
    cout<<"  / ____|            | (_) |           ";
    gotoxy(1,3);
    cout<<" | |     _ __ ___  __| |_| |_ ___  ___ ";
    gotoxy(1,4);
    cout<<" | |    | '__/ _ "<<char(92)<<"/ _` | | __/ _ "<<char(92)<<"/ __|";
    gotoxy(1,5);
    cout<<" | |____| | |  __/ (_| | | || (_) "<<char(92)<<"__ "<<char(92);
    gotoxy(1,6);
    cout<<"  "<<char(92)<<"_____|_|  "<<char(92)<<"___|"<<char(92)<<"__,_|_|"<<char(92)<<"__"<<char(92)<<"___/|___/";
}
void pintarSalir(){
    gotoxy(1,1);
    cout<<"   _____       _ _      ";
    gotoxy(1,2);
    cout<<"  / ____|     | (_)     ";
    gotoxy(1,3);
    cout<<" | (___   __ _| |_ _ __ ";
    gotoxy(1,4);
    cout<<"  "<<char(92)<<"___ "<<char(92)<<" / _` | | | '__|";
    gotoxy(1,5);
    cout<<"  ____) | (_| | | | |   ";
    gotoxy(1,6);
    cout<<" |_____/ "<<char(92)<<"__,_|_|_|_|   ";
}

int inicio(){
    int puntero = 0;
    while(true)
    {
        ShowConsoleCursor(false);
        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15);
        pintarMarco();
        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15);
        pintarTitulo();
        pintarCastillo();
        SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15);
        pintarMenu(puntero);
        while(true)
        {
            if (GetAsyncKeyState(VK_UP) != 0)
            {
                puntero -= 1;
                PlaySound(TEXT("ui_town_button_embark.wav"),NULL,SND_ASYNC);
                if (puntero == -1)
                {
                    puntero = 3;
                }
                break;
            }
            if (GetAsyncKeyState(VK_DOWN) != 0)
            {
                puntero += 1;
                PlaySound(TEXT("ui_town_button_embark.wav"),NULL,SND_ASYNC);
                if (puntero == 4)
                {
                    puntero = 0;
                }
                break;
            }
            if (GetAsyncKeyState(VK_RETURN) != 0)
            {
                PlaySound(TEXT("ui_shr_button_click.wav"),NULL,SND_ASYNC);
                switch (puntero)
                {
                    case 0:
                        system("cls");
                        PlaySound(TEXT("gen_title_startgame.wav"),NULL,SND_ASYNC);
                        pintarMarcoJugar();
                        pintarescenario();
                        /*plaguedoctor();
                        vestal();
                        highwayman();
                        crusader();
                        escudo();
                        esqueleto();
                        arquero();
                        arquero_2();*/
                        Sleep(1000);
                        while (true)
                        {
                            if (GetAsyncKeyState(VK_RETURN) != 0)
                            {
                                //break;
                            }
                            if (GetAsyncKeyState(VK_UP) != 0){}
                            if (GetAsyncKeyState(VK_DOWN) != 0){}
                        }
                        system("cls");
                        break;
                    case 1:
                        system("cls");
                        pintarMarco();
                        pintarInstruc();
                        pintarMenu(puntero);
                        gotoxy(2,2);
                        cout << "";
                        gotoxy(2,8);
                        cout << "-> Tendras que atravesar las 3 mazmorras para completar el juego";
                        gotoxy(2,9);
                        cout << "-> Iniciaras unicamente con 4 personajes, dependera de ti su supervivencia";
                        gotoxy(2,10);
                        cout << "-> Tienes que eliminar a todos los enemigos en tu camino";
                        gotoxy(2,11);
                        cout << "-> Perderas unicamente cuando todos tus personajes mueran";
                        gotoxy(2,12);
                        cout << "-> Utilizaras teclas para interactuar con el juego, presta atencion al tutorial";
                        gotoxy(2,13);
                        cout << "-Presiona enter para regresar-";
                        Sleep(1000);
                        while (true){
                            if (GetAsyncKeyState(VK_RETURN) != 0)
                            {
                                PlaySound(TEXT("ui_shr_unpause.wav"),NULL,SND_ASYNC);
                                break;
                            }
                            if (GetAsyncKeyState(VK_UP) != 0){}
                            if (GetAsyncKeyState(VK_DOWN) != 0){}
                        }
                        system("cls");
                        break;
                    case 2:
                        system("cls");
                        pintarMarco();
                        pintarCreditos();
                        pintarMenu(puntero);
                        gotoxy(2,8);
                        cout << "Instituto: Universidad Aut"<<char(162)<<"noma de Baja California Sur";
                        gotoxy(2,10);
                        cout << "Departamento: Departamento Acad"<<char(130)<<"mico de Sistemas Computacionales - (DASC)";
                        gotoxy(2,12);
                        cout << "Profesor: Ing. Jonathan Giovanni Soto Mu"<<char(164)<<"oz";
                        gotoxy(2,14);
                        cout << "Materia: Programaci"<<char(162)<<"n I";
                        gotoxy(2,16);
                        cout << "Equipo: David Alonso Estrada Buenrostro";
                        gotoxy(10,17);
                        cout << "Enrique Le"<<char(162)<<"n Geraldo";
                        gotoxy(10,18);
                        cout << "Ian Manuel Rodr"<<char(161)<<"guez Jacinto";
                        gotoxy(2,20);
                        cout << "-Presiona enter para regresar-";
                        Sleep(1000);
                        while (true){
                            if (GetAsyncKeyState(VK_RETURN) != 0)
                            {
                                PlaySound(TEXT("ui_shr_unpause.wav"),NULL,SND_ASYNC);
                                break;
                            }
                            if (GetAsyncKeyState(VK_UP) != 0){}
                            if (GetAsyncKeyState(VK_DOWN) != 0){}
                        }
                        system("cls");
                        break;
                    case 3:
                        system("cls");
                        PlaySound(TEXT("ui_shr_window_popup.wav"),NULL,SND_ASYNC);
                        pintarMarco();
                        pintarSalir();
                        pintarMenu(puntero);
                        gotoxy(2,10);
                        cout << "El juego se cerrara en breve.";
                        Sleep(3000);
                        return 0;
                        break;
                }
                break;
            }
        }
        Sleep(125);
    }
}
